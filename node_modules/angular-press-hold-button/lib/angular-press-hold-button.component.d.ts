import { ElementRef, EventEmitter, OnInit, Renderer2 } from '@angular/core';
import * as i0 from "@angular/core";
export declare class AngularPressHoldButton implements OnInit {
    private renderer;
    progressBar: ElementRef | undefined;
    duration: number;
    backgroundColor: string;
    progressColor: string;
    labelStart: string;
    labelProgress: string;
    labelFinish: string;
    actionStarted: EventEmitter<void>;
    actionCancelled: EventEmitter<void>;
    actionFinished: EventEmitter<void>;
    label: string;
    currentState: 'start' | 'progress' | 'finish';
    private progressInterval;
    private progressWidth;
    constructor(renderer: Renderer2);
    ngOnInit(): void;
    startAction(event: Event): void;
    stopAction(event?: Event): void;
    private actionSuccess;
    private updateProgress;
    private clearProgress;
    static ɵfac: i0.ɵɵFactoryDeclaration<AngularPressHoldButton, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AngularPressHoldButton, "angular-press-hold-button", never, { "duration": { "alias": "duration"; "required": false; }; "backgroundColor": { "alias": "backgroundColor"; "required": false; }; "progressColor": { "alias": "progressColor"; "required": false; }; "labelStart": { "alias": "labelStart"; "required": false; }; "labelProgress": { "alias": "labelProgress"; "required": false; }; "labelFinish": { "alias": "labelFinish"; "required": false; }; }, { "actionStarted": "actionStarted"; "actionCancelled": "actionCancelled"; "actionFinished": "actionFinished"; }, never, ["[slot='left'][when='start']", "[slot='left'][when='progress']", "[slot='left'][when='finish']", "[slot='right'][when='start']", "[slot='right'][when='progress']", "[slot='right'][when='finish']"], true, never>;
}
